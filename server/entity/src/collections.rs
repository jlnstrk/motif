//! SeaORM Entity. Generated by sea-orm-codegen 0.9.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "collections")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub title: String,
    pub description: Option<String>,
    pub owner_id: Uuid,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::profiles::Entity",
        from = "Column::OwnerId",
        to = "super::profiles::Column::UserId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Profiles,
    #[sea_orm(has_many = "super::collection_motifs::Entity")]
    CollectionMotifs,
}

impl Related<super::profiles::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Profiles.def()
    }
}

impl Related<super::collection_motifs::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CollectionMotifs.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
