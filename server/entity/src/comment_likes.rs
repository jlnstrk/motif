//! SeaORM Entity. Generated by sea-orm-codegen 0.9.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "comment_likes")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub comment_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub liker_id: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::comments::Entity",
        from = "Column::CommentId",
        to = "super::comments::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Comments,
    #[sea_orm(
        belongs_to = "super::profiles::Entity",
        from = "Column::LikerId",
        to = "super::profiles::Column::UserId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Profiles,
}

impl Related<super::comments::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Comments.def()
    }
}

impl Related<super::profiles::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Profiles.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
